1、文本文件读写
      open函数打开文件
      用f.write写入文件
      用f.readlines()读取全部文件内容
      用f.readline()读取文件一行
      用f.close()关闭文件
      用f.read()读取全部文件内容，返回一个字符串，包含文件全部内容
2、数据库
import sqlite3

db = sqlite3.connect("D:/Python_test/sqltest2.db")  # 连接数据库，若不存在则自动创建
cur = db.cursor()  # 获取光标，要操作数据库一般通过光标进行
sql = '''CREATE TABLE if not exists students (id integer primary key, name text, gpa real, birthday date, 
age integer, picture blob) '''
# 如果表 students 不存在就创建它
cur.execute(sql)  # 执行sql命令
cur.execute("insert into students values(1600, '张三', 3.81, 2000-09-12, 18, null)")  # 插入一个记录
mylist = [(1700, '李四', 4.1, '2001-02-21', 17, None), (1900, '王五', 2.9, '1999-09-24', 19, None)]
for s in mylist:
    cur.execute('INSERT INTO students VALUES(?,?,?,?,?,?)', (s[0], s[1], s[2], s[3], s[4], s[5]))
db.commit()  # 真正写入，写入操作都需要这个
cur.close()  # 关闭光标
db.close()  # 关闭数据库

3、正则表达式
   字符          匹配的模式                                                 正则表达式            匹配的字符串
   .             除'\n'外的任意一个字符，包括汉字                           'a.b'                'acb'   'adb'   'a(b'
   *             表示左边的字符可以出现0次或任意多次                        'a*b'                'ab'   'aab'    'aaaaab'
   ?             表示左边的字符必须出现0次或1次                             'a?b'                'ab'   'b'
   +             表示左边的字符必须出现至少1次                              'a+b'                'ab'   'aaaab'
   {m}           表示左边的字符必须出现m次                                  'ka{3}b'             'kaaab'
   {m,n}         左边字符至少m次，之多n次                                   'ka{1,3}b'           'kab'  'kaaab'
   \d            数字字符，等价于[0-9]                                      'a\db'               'a2b'  'a7b'
   \D            非数字字符，等价于除'\n'和[0-9]                            'a\Db'               'afb'  'a)b'
   \s            空白字符，如空格，\t,\r,\n等                               'a\sb'               'a b'   'a\nb'
   \S            非空白字符                                                 'a\Sb'               'agb'   'a&b'
   \w            单词字符，包括汉字或大小写英文字母，数字，下划线            'a\wb'               'atb'   'a内b'
   \W            非单词字符                                                 'a\Wb'               'a?b'   'a(b'
   |             A|B表示能匹配A或能匹配B均算能匹配                           'ab|c'              'ab'    'c'
如果要在正则表达式表达 . + ? * $ [] () ^ { } \   需要在前面加上 \
